services:
  # PostgreSQL with pgvector extension
  db:
    image: ankane/pgvector:latest
    container_name: talemo-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-talemo}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Web Server
  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile.dev
    image: talemo-web
    container_name: talemo-web
    restart: unless-stopped
    depends_on:
      - db
      - redis
      - minio
      - mailhog
    env_file:
      - ../.env
    ports:
      - "${PORT:-8000}:${PORT:-8000}"
    volumes:
      - ../:/app
    command: bash -c "PYTHONPATH=/app python manage.py runserver ${HOST:-0.0.0.0}:${PORT:-8000}"

  # Redis for caching and message broker
  redis:
    image: redis:7-alpine
    container_name: talemo-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data

  # MinIO for object storage
  minio:
    image: minio/minio:latest
    container_name: talemo-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MINIO_PORT:-9000}/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Celery worker for asynchronous tasks
  celery:
    build:
      context: ..
      dockerfile: docker/Dockerfile.dev
    image: talemo-celery
    container_name: talemo-celery
    restart: unless-stopped
    depends_on:
      - redis
      - db
      - mailhog
    env_file:
      - ../.env
    volumes:
      - ../:/app
    command: celery -A config worker --loglevel=info

  # Celery Beat for scheduled tasks
  celery-beat:
    build:
      context: ..
      dockerfile: docker/Dockerfile.dev
    image: talemo-celery-beat
    container_name: talemo-celery-beat
    restart: unless-stopped
    depends_on:
      - redis
      - db
      - celery
      - mailhog
    env_file:
      - ../.env
    volumes:
      - ../:/app
    command: celery -A config beat --loglevel=info

  # Flower for Celery monitoring
  flower:
    build:
      context: ..
      dockerfile: docker/Dockerfile.dev
    image: talemo-flower
    container_name: talemo-flower
    restart: unless-stopped
    depends_on:
      - redis
      - celery
      - mailhog
    env_file:
      - ../.env
    ports:
      - "${FLOWER_PORT:-5555}:5555"
    volumes:
      - ../:/app
    command: celery -A config flower --port=5555

  # Mailhog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: talemo-mailhog
    restart: unless-stopped
    ports:
      - "${EMAIL_PORT:-1025}:1025"
      - "${MAILHOG_WEB_PORT:-8025}:8025"

volumes:
  postgres_data:
  redis_data:
  minio_data: